package CSRfidJavaMultipleReader;

import java.util.*;
import javax.swing.*;
import java.awt.*;
import javax.swing.table.*;

public class TagTIDInventoryFrame extends javax.swing.JFrame implements AsyncCallbackEventListener{

    // <editor-fold defaultstate="collapsed" desc="Variable">
    private class ButtonState{
        final public static int Start = 0;
        final public static int Stop = 1;
        final public static int Unknown = 2;
    }
    private DefaultTableModel inventoryTableModel;
    private int startButtonState = ButtonState.Unknown;
    private ArrayList InventoryListItems = new ArrayList();

    private final int MAX_THREAD = 50;
    private Thread[] m_run_process = new Thread[MAX_THREAD];
    private TIDInventory[] m_inventory = new TIDInventory[MAX_THREAD];
    private int lastThreadId = -1;
    private String JavaProcessPath = "CS203JavaProcessDemo.jar"; // modify it to your desired path
    
    private AsyncCallbackEventListener cls = this;
    // </editor-fold>

    // <editor-fold defaultstate="collapsed" desc="Init">
    /** Creates new form TagInventoryFrame */
    public TagTIDInventoryFrame() {
        initComponents();

        //Center the dialog
        Dimension size = getSize();
        setLocation((Main.screen.width - size.width)/2, (Main.screen.height - size.height)/2);

        inventoryTableModel = (DefaultTableModel)table_inventory.getModel();

        this.setIconImage(new ImageIcon("CSL Logo.jpg").getImage());
    }
    // </editor-fold>

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_start = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_inventory = new javax.swing.JTable();
        btn_clear = new javax.swing.JButton();
        tf_selected = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tf_epc = new javax.swing.JTextField();
        btn_write = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Inventory");
        setBackground(java.awt.SystemColor.info);
        setBounds(new java.awt.Rectangle(0, 0, 320, 240));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        btn_start.setBackground(new java.awt.Color(0, 192, 0));
        btn_start.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btn_start.setText("Start");
        btn_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_startActionPerformed(evt);
            }
        });

        table_inventory.setAutoCreateRowSorter(true);
        table_inventory.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        table_inventory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PC", "EPC", "TID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_inventory.setRowHeight(25);
        table_inventory.getTableHeader().setReorderingAllowed(false);
        table_inventory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_inventoryMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table_inventory);
        if (table_inventory.getColumnModel().getColumnCount() > 0) {
            table_inventory.getColumnModel().getColumn(0).setPreferredWidth(80);
            table_inventory.getColumnModel().getColumn(1).setPreferredWidth(320);
            table_inventory.getColumnModel().getColumn(2).setPreferredWidth(320);
        }

        btn_clear.setBackground(java.awt.Color.cyan);
        btn_clear.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        tf_selected.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Selected TID");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("New EPC");

        tf_epc.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        btn_write.setBackground(new java.awt.Color(0, 192, 0));
        btn_write.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btn_write.setText("Write new EPC to selected tag");
        btn_write.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_writeActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Must be 96 bits");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setText("Must be 96 bits");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(btn_start, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(btn_clear, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel1)
                                    .add(jLabel2))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(layout.createSequentialGroup()
                                        .add(tf_epc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 338, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jLabel4))
                                    .add(layout.createSequentialGroup()
                                        .add(tf_selected, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 338, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jLabel3))))))
                    .add(layout.createSequentialGroup()
                        .add(80, 80, 80)
                        .add(btn_write, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 310, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 366, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btn_start)
                    .add(btn_clear))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(tf_selected, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(tf_epc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel4))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btn_write)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    // <editor-fold defaultstate="collapsed" desc="Event">
    public synchronized void AsyncCallbackEvent(AsyncCallbackEventArgs ev)
    {                
        TagCallbackInfo record = ev.info;

        int index = Collections.binarySearch(InventoryListItems, ev.info);
        if (index > -1)
        {
            //found a record do nothing
        }
        else
        {
            InventoryListItems.add(record);
            Object[] entry = new Object[] {record.pc.ToString(), record.epc.ToString(), record.tid.ToString()};
            inventoryTableModel.addRow(entry);
            Collections.sort(InventoryListItems);
        }
    }
    // </editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="UI Handle">
    private void btn_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_startActionPerformed
        if (startButtonState == ButtonState.Start)
        {
            Start();
        }
        else if (startButtonState == ButtonState.Stop)
        {
            Stop();
        }
    }//GEN-LAST:event_btn_startActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Stop();
        evt.getWindow().dispose();
        new NetFinderFrame().setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        SetStartButtonState(ButtonState.Start);
    }//GEN-LAST:event_formWindowOpened

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        int len = inventoryTableModel.getRowCount();
        if (len > 0)
        {
            for (int i = len-1; i >= 0; i--)
                inventoryTableModel.removeRow(i);
        }
        InventoryListItems.clear();
    }//GEN-LAST:event_btn_clearActionPerformed

    private void btn_writeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_writeActionPerformed
        if (startButtonState == ButtonState.Stop)
        {
            Stop();
        }
        Write write = new Write(Main.deviceName[0]);
        write.StartWriteEPC(Main.ipAddress[0], tf_selected.getText(), tf_epc.getText());
        write.Disconnect();
    }//GEN-LAST:event_btn_writeActionPerformed

    private void table_inventoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_inventoryMouseClicked
        tf_selected.setText(table_inventory.getValueAt(table_inventory.getSelectedRow(), 2).toString());
    }//GEN-LAST:event_table_inventoryMouseClicked

    private void Start()
    {
        for (lastThreadId = 0; lastThreadId < Main.ipAddress.length; lastThreadId++)
        {
            m_inventory[lastThreadId] = new TIDInventory(Main.deviceName[lastThreadId]);
            m_inventory[lastThreadId].addAsyncCallbackEventListener(cls);
            m_run_process[lastThreadId] = new Thread(new StartInventoryThread(Main.ipAddress[lastThreadId], Main.macAddress[lastThreadId], m_inventory[lastThreadId]));
            m_run_process[lastThreadId].start();
        }
        --lastThreadId;

        try
        {
            Thread.sleep(1000);
        }
        catch (Exception ex)
        {
            ex.getMessage();
        }

        SetStartButtonState(ButtonState.Stop);
    }

    private void Stop()
    {
        for (lastThreadId = 0; lastThreadId < Main.ipAddress.length; lastThreadId++)
        {
            if (m_inventory[lastThreadId] != null)
            {
                m_inventory[lastThreadId].stopInventory = true;
                try
                {
                    Thread.sleep(200);
                }
                catch (Exception ex)
                {
                    ex.getMessage();
                }
                m_inventory[lastThreadId].removeAsyncCallbackEventListener(cls);
                m_inventory[lastThreadId].Disconnect();
            }
        }
        lastThreadId = -1;
        SetStartButtonState(ButtonState.Start);
    }

    private void SetStartButtonState(int state)
    {
        if (state == startButtonState)
            return;
        switch (state)
        {
            case ButtonState.Stop:
                startButtonState = ButtonState.Stop;
                btn_start.setText("Stop");
                btn_start.setBackground(java.awt.Color.red);
                btn_clear.setEnabled(false);
                break;
            case ButtonState.Start:
                startButtonState = ButtonState.Start;
                btn_start.setText("Start");
                btn_start.setBackground(new java.awt.Color(0, 192, 0));
                btn_clear.setEnabled(true);
                break;
        }
    }

    class StartInventoryThread implements Runnable
    {
        private String ip;
        private String mac;
        private TIDInventory inventory;

        StartInventoryThread(String ip, String mac, TIDInventory inventory) {
            this.ip = ip;
            this.mac = mac;
            this.inventory = inventory;
        }

        public void run() {                   
            inventory.StartInventory(ip);
        }
    }
    // </editor-fold>

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TagTIDInventoryFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_start;
    private javax.swing.JButton btn_write;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table_inventory;
    private javax.swing.JTextField tf_epc;
    private javax.swing.JTextField tf_selected;
    // End of variables declaration//GEN-END:variables

}
